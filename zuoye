### 编写单元测试的原因
1. 帮助开发人员编写代码，提升质量、减少bug。
2. 提升反馈速度，减少重复工作，提高开发效率。
3. 保证你最后的代码修改不会破坏之前代码的功能。
4. 让代码维护更容易。
5. 有助于改进代码质量和设计。

     int s[]=new int[5];
             System.out.println("请输入任意五个整数：");
             Scanner scan=new Scanner(System.in);
             for(int b=0;b<s.lenth;b++)
                     s[b]=scan,nextInt();
             for(int i=1;i<5;i++)
             {
                     for(int j=1;j>0;j--)
                     {
                             if(s[j]>s[j-1])
                     }       int temp; 
                             temp=s[j];
                             s[j]=s[j-1];
                             s[j-1]=temp;
                     }
                     }
#测试用例
+第一: 0,1,2,3,4,5,6,7,8,9
+第二: 9,8,7,6,5,4,3,2,1,0
+第三: 5,6,7,1,2,3,8,0,9,4
+第四: 7,5,6,3,2,8,0,9,4,1 .
         
